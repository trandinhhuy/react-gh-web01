{"version":3,"sources":["index.js"],"names":["Square","props","rowIndex","row","colIndex","col","className","this","bold","onClick","value","React","Component","Board","state","squares","Array","parseInt","fill","turn","win","history","moveCount","sort","length","i","slice","setState","position","move","historyArray","push","boldArray","console","log","checkArray","toLeftRow","toLeftCol","toRightRow","toRightCol","checkWinlose","count","moveNumber","resetArray","currentPosition","historyTransformClick","map","renderHistoryButton","ascendingHistory","descendingHistory","historyTemplate","reverse","handleClick","numbers","arrayCol","num","listBox","arrayRow","renderCol","renderRow","renderBoard","renderWinner","renderHistory","renderSortHistory","Game","text","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a98e3b91.chunk.js","sourcesContent":["import React from 'react'\nimport './index.css'\nimport ReactDOM from 'react-dom'\n\nclass Square extends React.Component {\n  constructor(props){\n    super(props)\n    this.rowIndex = props.row\n    this.colIndex = props.col\n  }\n  render() {\n    return (\n      <button className={this.props.bold} onClick = {() => {\n        this.props.onClick()\n      }}>\n        {this.props.value}\n      </button>\n    );\n  }\n}\n\nclass Board extends React.Component {\n  constructor(props){\n    super(props) \n    this.row = props.row\n    this.col = props.col\n    this.state = {\n      squares: Array(parseInt(this.row)).fill(Array(parseInt(this.col)).fill(null)),\n      turn: 'X',\n      win: null,\n      history : [],\n      moveCount: 0,\n      sort: false,\n      bold: Array(parseInt(this.row)).fill(Array(parseInt(this.col)).fill(\"square\"))\n    }\n  }\n  handleClick(row, col){\n    const squares = Array(this.state.squares.length)\n    for (let i = 0 ; i < this.state.squares.length ; i++){\n      squares[i] = this.state.squares[i].slice();\n    }\n    if (squares[row][col] != null || this.state.win != null) return\n    if (this.state.turn === 'X') {\n      squares[row][col] = 'X'\n      this.setState({squares: squares})\n      this.setState({turn: 'O'})\n      let history = {position: {row: row, col: col}, value: 'X', move: this.state.moveCount + 1}\n      let historyArray = this.state.history.slice()\n      if (this.state.moveCount < historyArray.length){\n        //history.move = history.move - 1\n        if (this.state.sort == false)\n          historyArray[this.state.moveCount] = history\n        else historyArray[historyArray.length - this.state.moveCount - 1] = history\n      }\n      else {\n        historyArray.push(history)\n      }\n      this.setState({history: historyArray})\n      this.setState({moveCount: this.state.moveCount + 1})\n    } \n    else {\n      squares[row][col] = 'O'\n      this.setState({squares: squares})\n      this.setState({turn: 'X'})\n      let history = {position: {row: row, col: col}, value: 'O', move: this.state.moveCount + 1}\n      let historyArray = this.state.history.slice()\n      if (this.state.moveCount < historyArray.length){\n        //history.move = history.move - 1\n        if (this.state.sort == false)\n          historyArray[this.state.moveCount] = history\n        else historyArray[historyArray.length - this.state.moveCount - 1] = history\n      }\n      else {\n        historyArray.push(history)\n      }\n      this.setState({history: historyArray})\n      this.setState({moveCount: this.state.moveCount + 1})\n    }\n    let boldArray = Array(this.state.bold.length)\n    for (let i = 0 ; i < this.state.bold.length ; i++){\n      boldArray[i] = Array(this.state.bold[i].length).fill(\"square\")\n    }\n    boldArray[row][col] = \"square-bold\"\n    console.log(boldArray)\n    this.setState({bold: boldArray})\n    \n    // check win lose condition\n\n    let checkArray = squares\n    let toLeftRow = [-1, -2, -3, -4]\n    let toLeftCol = [0, 0, 0, 0]\n    let toRightRow = [1, 2, 3, 4]\n    let toRightCol = [0, 0, 0, 0]\n    if (this.checkWinlose(row, col, checkArray, toLeftRow, toLeftCol, toRightRow, toRightCol) != null){\n      this.setState({win: this.checkWinlose(row, col, checkArray, toLeftRow, toLeftCol, toRightRow, toRightCol)})\n    }\n    toLeftRow = [0, 0, 0, 0]\n    toLeftCol = [-1, -2, -3, -4]\n    toRightRow = [0, 0, 0, 0]\n    toRightCol = [1, 2, 3, 4]\n    if (this.checkWinlose(row, col, checkArray, toLeftRow, toLeftCol, toRightRow, toRightCol) != null){\n      this.setState({win: this.checkWinlose(row, col, checkArray, toLeftRow, toLeftCol, toRightRow, toRightCol)})\n    }\n    toLeftRow = [-1, -2, -3, -4]\n    toLeftCol = [-1, -2, -3, -4]\n    toRightRow = [1, 2, 3, 4]\n    toRightCol = [1, 2, 3, 4]\n    if (this.checkWinlose(row, col, checkArray, toLeftRow, toLeftCol, toRightRow, toRightCol) != null){\n      this.setState({win: this.checkWinlose(row, col, checkArray, toLeftRow, toLeftCol, toRightRow, toRightCol)})\n    }\n    toLeftRow = [-1, -2, -3, -4]\n    toLeftCol = [1, 2, 3, 4]\n    toRightRow = [1, 2, 3, 4]\n    toRightCol = [-1, -2, -3, -4]\n    if (this.checkWinlose(row, col, checkArray, toLeftRow, toLeftCol, toRightRow, toRightCol) != null){\n      this.setState({win: this.checkWinlose(row, col, checkArray, toLeftRow, toLeftCol, toRightRow, toRightCol)})\n    }\n    \n  }\n  checkWinlose(row, col, checkArray, toLeftRow, toLeftCol, toRightRow, toRightCol){\n    let count = 0\n    let boldArray = Array(this.state.bold.length)\n    for (let i = 0 ; i < boldArray.length ; i++){\n      boldArray[i] = Array(this.state.bold[i].length).fill(\"square\")\n    }\n    for (let i = 0; i < toLeftRow.length ; i++){\n      if (row + toLeftRow[i] < 0 || col + toLeftCol[i] < 0 || row + toLeftRow[i] > parseInt(this.state.row) - 1 || col + toLeftCol[i] > parseInt(this.state.col) - 1)\n      continue\n      if (checkArray[row][col] == checkArray[row + toLeftRow[i]][col + toLeftCol[i]]){\n        count = count + 1\n        boldArray[row + toLeftRow[i]][col + toLeftCol[i]] = \"square-bold\"\n      }\n      else break;\n    }\n    for (let i = 0 ; i < toRightRow.length ; i++){\n      if (row + toRightRow[i] < 0 || col + toRightCol[i] < 0 || row + toRightRow[i] > parseInt(this.state.row) - 1 || col + toRightCol[i] > parseInt(this.state.col) - 1)\n      continue\n      if (checkArray[row][col] == checkArray[row + toRightRow[i]][col + toRightCol[i]]){\n        boldArray[row + toRightRow[i]][col + toRightCol[i]] = \"square-bold\"\n        count = count + 1;\n      }\n      else break\n    }\n    if (count >= 4){\n      boldArray[row][col] = \"square-bold\"\n      this.setState({bold: boldArray})\n      return checkArray[row][col]\n    }\n    else return null\n  }\n  renderWinner(){\n    if (this.state.win === 'X' || this.state.win === 'O'){\n      return <div className = \"winner\">The winner is {this.state.win}</div>\n    }\n    else if (this.state.win === 'draw') {\n      return <div className = \"winner\">draw</div>\n    }\n    else return <div className = \"winner\">{this.state.win}</div>\n  }\n  historyTransformClick(moveNumber){\n    let resetArray = Array(parseInt(this.row))\n    for (let i = 0 ; i < resetArray.length ; i++){\n      resetArray[i] = Array(parseInt(this.col)).fill(null)\n    }\n    for (let i = 0 ; i <= moveNumber ; i++){\n      let position = this.state.history[i].position\n      let value = this.state.history[i].value\n      resetArray[position.row][position.col] = value\n    }\n    let historyArray = this.state.history.slice()\n\n    let boldArray = Array(this.state.bold.length)\n    for (let i = 0 ; i < boldArray.length ; i++){\n      boldArray[i] = Array(this.state.bold[i].length).fill(\"square\")\n    }\n\n    let currentPosition = this.state.history[moveNumber].position\n    boldArray[currentPosition.row][currentPosition.col] = \"square-bold\"\n    this.setState({bold: boldArray})\n\n    let win = false;\n\n    let toLeftRow = [-1, -2, -3, -4]\n    let toLeftCol = [0, 0, 0, 0]\n    let toRightRow = [1, 2, 3, 4]\n    let toRightCol = [0, 0, 0, 0]\n    if (this.checkWinlose(currentPosition.row, currentPosition.col, resetArray, toLeftRow, toLeftCol, toRightRow, toRightCol) != null){\n      win = true\n      this.setState({win: this.checkWinlose(currentPosition.row, currentPosition.col, resetArray, toLeftRow, toLeftCol, toRightRow, toRightCol)})\n    }\n    toLeftRow = [0, 0, 0, 0]\n    toLeftCol = [-1, -2, -3, -4]\n    toRightRow = [0, 0, 0, 0]\n    toRightCol = [1, 2, 3, 4]\n    if (this.checkWinlose(currentPosition.row, currentPosition.col, resetArray, toLeftRow, toLeftCol, toRightRow, toRightCol) != null){\n      win = true\n      this.setState({win: this.checkWinlose(currentPosition.row, currentPosition.col, resetArray, toLeftRow, toLeftCol, toRightRow, toRightCol)})\n    }\n    toLeftRow = [-1, -2, -3, -4]\n    toLeftCol = [-1, -2, -3, -4]\n    toRightRow = [1, 2, 3, 4]\n    toRightCol = [1, 2, 3, 4]\n    if (this.checkWinlose(currentPosition.row, currentPosition.col, resetArray, toLeftRow, toLeftCol, toRightRow, toRightCol) != null){\n      win = true\n      this.setState({win: this.checkWinlose(currentPosition.row, currentPosition.col, resetArray, toLeftRow, toLeftCol, toRightRow, toRightCol)})\n    }\n    toLeftRow = [-1, -2, -3, -4]\n    toLeftCol = [1, 2, 3, 4]\n    toRightRow = [1, 2, 3, 4]\n    toRightCol = [-1, -2, -3, -4]\n    if (this.checkWinlose(currentPosition.row, currentPosition.col, resetArray, toLeftRow, toLeftCol, toRightRow, toRightCol) != null){\n      win = true\n      this.setState({win: this.checkWinlose(currentPosition.row, currentPosition.col, resetArray, toLeftRow, toLeftCol, toRightRow, toRightCol)})\n    }\n\n    //historyArray.splice(moveNumber + 1, historyArray.length - moveNumber)\n    this.setState({squares: resetArray})\n    this.setState({history: historyArray})\n    this.setState({moveCount: moveNumber + 1})\n    let value = this.state.history[moveNumber].value\n    if (value === 'X')\n      this.setState({turn: 'O'})\n    else \n      this.setState({turn: 'X'})\n    if (win == false)\n    this.setState({win: null})\n  }\n  renderHistoryButton(move){\n    return(\n      <li>\n        <button className = \"history-button\" onClick = {() => this.historyTransformClick(move.move - 1)}>\n          #{move.move} Player {move.value} move: [ row: {move.position.row}, col: {move.position.col} ]\n        </button>\n      </li>\n    )\n  }\n  renderHistory(){\n    return (\n      <div>\n        <div>History</div>\n        <br/>\n        <ul className = \"history-list\">{this.state.history.map((move) => this.renderHistoryButton(move))}</ul>\n      </div>\n    )\n  }\n  renderSortHistory(){\n    return <div className = \"sort-container\">\n      <button onClick = {() => {this.ascendingHistory()}}>Ascending</button>\n      <button onClick = {() => {this.descendingHistory()}}>Descending</button>\n    </div>\n  }\n  ascendingHistory(){\n    if (this.state.sort == false)\n    return\n    let historyTemplate = this.state.history.slice();\n    this.setState({history: historyTemplate.reverse()})\n    this.setState({sort: false})\n  }\n  descendingHistory(){\n    if (this.state.sort == true)\n    return\n    let historyTemplate = this.state.history.slice();\n    this.setState({history: historyTemplate.reverse()})\n    this.setState({sort: true})\n  }\n  renderSquare(row, col){\n      return(\n        <Square row = {row} col = {col} value = {this.state.squares[row][col]} bold = {this.state.bold[row][col]} onClick = {() => this.handleClick(row, col)}></Square>\n      )\n\n  }\n  listBox (numbers) {\n    let arrayCol = Array(parseInt(this.col)).fill(null)\n    for (let i = 0 ; i < arrayCol.length ; i++){\n      arrayCol[i] = i\n    }\n    return arrayCol.map((num) => <Square row = {numbers} col = {num} value = {this.state.squares[numbers][num]} bold = {this.state.bold[numbers][num]} onClick = {() => this.handleClick(numbers, num)}></Square>)\n    //return arrayCol.map((num) => this.renderSquare(numbers, num))\n  }\n  renderCol(numbers) {\n    return (\n      <ul className = \"board-list\">{this.listBox(numbers)}</ul>\n    )\n  }\n  renderRow() {\n    let arrayRow = Array(parseInt(this.row)).fill(null)\n    for (let i = 0 ; i < arrayRow.length ; i++){\n      arrayRow[i] = i\n    }\n    return arrayRow.map((numbers) => <li><div className = \"board-row\">{this.renderCol(numbers)}</div></li>)\n  }\n  renderBoard() {\n    return(\n      <ul className = \"board-list\">{this.renderRow()}</ul>\n    )\n  }\n  render() {\n\n    return (\n      <div className = \"game\">\n        <div className = \"game-board\">\n          <div className = \"container\">\n            <div className=\"status\">Next player: {this.state.turn}</div>\n            {this.renderBoard()}\n            \n          </div>\n        </div>\n        <div className = \"game-info\">\n        <div className = \"winner-title\">The winner</div>\n        {this.renderWinner()}\n          <ol></ol>\n        </div>\n        <div className = \"history-info\">{this.renderHistory()}</div>\n        <div className = \"sort-history\">{this.renderSortHistory()}</div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props){\n    super(props)\n    this.text = \"hello\"\n  }\n  render() {\n    return ( \n        <Board row = \"20\" col = \"20\"/>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);"],"sourceRoot":""}